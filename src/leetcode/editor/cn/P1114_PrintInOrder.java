//Êàë‰ª¨Êèê‰æõ‰∫Ü‰∏Ä‰∏™Á±ªÔºö 
//
// public class Foo {
//¬† public void first() { print("first"); }
//¬† public void second() { print("second"); }
//¬† public void third() { print("third"); }
//} 
//
// ‰∏â‰∏™‰∏çÂêåÁöÑÁ∫øÁ®ãÂ∞Ü‰ºöÂÖ±Áî®‰∏Ä‰∏™ Foo ÂÆû‰æã„ÄÇ 
//
// 
// Á∫øÁ®ã A Â∞Ü‰ºöË∞ÉÁî® first() ÊñπÊ≥ï 
// Á∫øÁ®ã B Â∞Ü‰ºöË∞ÉÁî® second() ÊñπÊ≥ï 
// Á∫øÁ®ã C Â∞Ü‰ºöË∞ÉÁî® third() ÊñπÊ≥ï 
// 
//
// ËØ∑ËÆæËÆ°‰øÆÊîπÁ®ãÂ∫èÔºå‰ª•Á°Æ‰øù second() ÊñπÊ≥ïÂú® first() ÊñπÊ≥ï‰πãÂêéË¢´ÊâßË°åÔºåthird() ÊñπÊ≥ïÂú® second() ÊñπÊ≥ï‰πãÂêéË¢´ÊâßË°å„ÄÇ 
//
// 
//
// Á§∫‰æã 1: 
//
// ËæìÂÖ•: [1,2,3]
//ËæìÂá∫: "firstsecondthird"
//Ëß£Èáä: 
//Êúâ‰∏â‰∏™Á∫øÁ®ã‰ºöË¢´ÂºÇÊ≠•ÂêØÂä®„ÄÇ
//ËæìÂÖ• [1,2,3] Ë°®Á§∫Á∫øÁ®ã A Â∞Ü‰ºöË∞ÉÁî® first() ÊñπÊ≥ïÔºåÁ∫øÁ®ã B Â∞Ü‰ºöË∞ÉÁî® second() ÊñπÊ≥ïÔºåÁ∫øÁ®ã C Â∞Ü‰ºöË∞ÉÁî® third() ÊñπÊ≥ï„ÄÇ
//Ê≠£Á°ÆÁöÑËæìÂá∫ÊòØ "firstsecondthird"„ÄÇ
// 
//
// Á§∫‰æã 2: 
//
// ËæìÂÖ•: [1,3,2]
//ËæìÂá∫: "firstsecondthird"
//Ëß£Èáä: 
//ËæìÂÖ• [1,3,2] Ë°®Á§∫Á∫øÁ®ã A Â∞Ü‰ºöË∞ÉÁî® first() ÊñπÊ≥ïÔºåÁ∫øÁ®ã B Â∞Ü‰ºöË∞ÉÁî® third() ÊñπÊ≥ïÔºåÁ∫øÁ®ã C Â∞Ü‰ºöË∞ÉÁî® second() ÊñπÊ≥ï„ÄÇ
//Ê≠£Á°ÆÁöÑËæìÂá∫ÊòØ "firstsecondthird"„ÄÇ 
//
// 
//
// ÊèêÁ§∫Ôºö 
//
// 
// Â∞ΩÁÆ°ËæìÂÖ•‰∏≠ÁöÑÊï∞Â≠ó‰ºº‰πéÊöóÁ§∫‰∫ÜÈ°∫Â∫èÔºå‰ΩÜÊòØÊàë‰ª¨Âπ∂‰∏ç‰øùËØÅÁ∫øÁ®ãÂú®Êìç‰ΩúÁ≥ªÁªü‰∏≠ÁöÑË∞ÉÂ∫¶È°∫Â∫è„ÄÇ 
// ‰Ω†ÁúãÂà∞ÁöÑËæìÂÖ•Ê†ºÂºè‰∏ªË¶ÅÊòØ‰∏∫‰∫ÜÁ°Æ‰øùÊµãËØïÁöÑÂÖ®Èù¢ÊÄß„ÄÇ 
// 
// üëç 220 üëé 0


package leetcode.editor.cn;

//ÊåâÂ∫èÊâìÂç∞

import java.util.concurrent.CountDownLatch;

public class P1114_PrintInOrder{
    public static void main(String[] args) {
        //ÊµãËØï‰ª£Á†Å
        Foo foo = new Foo();
        new Thread(() -> {
            try {
                foo.third(() -> System.out.println("this is third"));
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }).start();
    
        new Thread(() -> {
            try {
                foo.second(() -> System.out.println("this is second"));
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }).start();
        
        new Thread(() -> {
            try {
                foo.first(() -> System.out.println("this is first"));
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }).start();
    }
    //ÂäõÊâ£‰ª£Á†Å
    //leetcode submit region begin(Prohibit modification and deletion)
    static class Foo {
    
    CountDownLatch latch1;
    CountDownLatch latch2;
        
    public Foo() {
        latch1 = new CountDownLatch(1);
        latch2 = new CountDownLatch(1);
    }

    public void first(Runnable printFirst) throws InterruptedException {
        // printFirst.run() outputs "first". Do not change or remove this line.
        printFirst.run();
        this.latch1.countDown();
    }

    public void second(Runnable printSecond) throws InterruptedException {
        latch1.await();
        // printSecond.run() outputs "second". Do not change or remove this line.
        printSecond.run();
        latch2.countDown();
    }

    public void third(Runnable printThird) throws InterruptedException {
        latch2.await();
        // printThird.run() outputs "third". Do not change or remove this line.
        printThird.run();
    }
}
//leetcode submit region end(Prohibit modification and deletion)

}